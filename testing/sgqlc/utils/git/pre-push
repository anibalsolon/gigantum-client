#!/bin/bash

BASE_PATH="$(git rev-parse --show-toplevel)"
FLAKE8="flake8"

function test_dependencies {
    if ! type $FLAKE8 &> /dev/null; then
      printf "\033[41mPlease install Flake8\033[0m\n"
      return 1
    fi

    return 0
}

function call_flake8 {

    echo "Linting Python files with Flake8"

    $FLAKE8 --config $BASE_PATH/setup.cfg $BASE_PATH
    FLAKE8_EXIT=$?

    if [[ "${FLAKE8_EXIT}" == 0 ]]; then
      printf "\033[42mFLAKE8 SUCCEEDED\033[0m\n"
    else
      printf "\033[41mFLAKE8 FAILED:\033[0m Fix flake8 errors and try again\n"
      return 1
    fi

    return 0
}

function test_coverage {
    rm -fr .coverage cover
    ./setup.py nosetests
    COVERAGE_EXIT=$?

    if [[ "${COVERAGE_EXIT}" == 0 ]]; then
      printf "\033[42mCOVERAGE SUCCEEDED\033[0m\n"
    else
      printf "\033[41mCOVERAGE FAILED:\033[0m Fix coverage errors and try again\n"
      return 1
    fi

    return 0
}

function do_release {
    rm -fr build dist doc/build
    python3 setup.py create_release
    RELEASE_EXIT=$?

    if [[ "${RELEASE_EXIT}" == 0 ]]; then
      printf "\033[42mRELEASE SUCCEEDED\033[0m\n"
    else
      printf "\033[41mRELEASE FAILED:\033[0m Fix release errors and try again\n"
      return 1
    fi

    return 0
}

cd $BASE_PATH
test_dependencies &&
call_flake8 &&
test_coverage &&
do_release
